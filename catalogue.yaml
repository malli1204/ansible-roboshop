- name: catalogue configuration
  hosts: catalogue
  become: yes
  tasks:
  - name: disable module
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: installing nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present

  - name: creating app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: create system user
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true
      home: /app

  - name: downloading the catalogue file
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
      dest: /tmp/catalogue.zip
  
  - name: extract catalogue files
    ansible.builtin.unarchive: 
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes
  
  - name: installing dependencies
    community.general.npm:
      path: /app

  - name: adding system services
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
    
  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true
    
  - name: starting the services
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes

  - name: copying mongodb repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.dnf:
      name: mongodb-mongosh
      state: present

  - name: check products loaded or not
    ansible.builtin.command: mongosh --host mongodb.malli12.site --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
    register: catalogue_output

  - name: printing catalogue output
    ansible.builtin.debug:
      msg: "{{ catalogue_output }}"
  
  - name: loading data
    ansible.builtin.shell: mongosh --host mongodb.malli12.site </app/db/master-data.js
    when: catalogue_output.std_out | int > 0


  